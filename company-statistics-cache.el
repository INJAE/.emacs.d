(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("./sysv_sem 5" ((eshell-mode . 4) (nil . 4)) "<vi" (((:file "/home/nieel/.emacs.d/config.org") . 1) (org-mode . 1) (nil . 1)) "url-package-name" (((:keyword "setq") . 1)) "upkg" (((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "minimum" ((text-mode . 1) (nil . 1)) "dependencies" ((markdown-mode . 1) ((:file "/home/nieel/dev/cppm/cppm.toml") . 1) (toml-mode . 2) ((:symbol "config") . 1) (nil . 2) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cppm.toml") . 1)) "unwrap" (((:symbol "option") . 1) ((:keyword "if") . 1) ((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "unistd.h" (((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1) ((:symbol "nil") . 1) (c-mode . 1) (nil . 1)) "package" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1)) "CppmPackage" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 2) ((:keyword "if") . 2) (c++-mode . 2) (nil . 2)) "Docker" (((:file "/home/nieel/dev/alchemist/src/main.rs") . 1) ((:symbol "shiplift") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "package/package.h" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1) (c++-mode . 1) (nil . 1)) "ECHRNG" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1) ((:symbol "app_") . 1) ((:keyword "namespace") . 1) (c++-mode . 1) (nil . 1)) "package/" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1) (c++-mode . 1) (nil . 1)) "stdlib.h" ((c++-mode . 1) (nil . 1) ((:file "/home/nieel/school/system/src/forkexec_parent.cpp") . 1) ((:symbol "nil") . 1)) "money_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 4) ((:keyword "public") . 2) (c++-mode . 4) (nil . 4) ((:symbol "p") . 2) ((:keyword "static") . 2)) "enable_language" (((:file "/home/nieel/dev/test/cppkg_test/cmake/cppm_tool.cmake") . 1) (cmake-mode . 1) (nil . 1)) "p_dest_str" (((:keyword "if") . 1) ((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) (c++-mode . 1) (nil . 1)) "SubCommand" (((:keyword "use") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "sys/mman.h" (((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1) ((:symbol "nil") . 1) (c-mode . 1) (nil . 1)) "errbuf" (((:keyword "sizeof") . 1)) "rtags-verify-protocol-version" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "defcustom") . 1) (emacs-lisp-mode . 1) (nil . 1)) "sudo chown -R nieel.nieel ~/.cppm" ((eshell-mode . 1) (nil . 1)) "libs" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:symbol "config") . 1) ((:keyword "auto") . 1) (c++-mode . 1) (nil . 1)) "~/Dropbox/" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "cppm cppkg init -m a -v 1.0.0 abc" ((eshell-mode . 2) (nil . 2)) "lambda" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 3) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "use-package") . 1) ((:keyword "setq") . 1)) "sys/types.h" (((:file "/home/nieel/school/system/src/forkexec_parent.cpp") . 1) ((:symbol "nil") . 3) (c++-mode . 1) (nil . 3) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1) (c-mode . 2) ((:file "/home/nieel/school/system/src/fork_pipe.c") . 1)) "add_subdirectory" (((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1) (cmake-mode . 1) (nil . 1)) "rm abc.toml" ((eshell-mode . 2) (nil . 2)) "build" (((:keyword "use") . 1)) "target_include_directories" (((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1) (cmake-mode . 1) (nil . 1)) "option" ((c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:keyword "use") . 1) ((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) (rust-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 2) (org-mode . 2) (nil . 2) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) ((:symbol "cppm") . 1)) "empty" (((:file "/home/nieel/dev/cppm/src/config/bin.cpp") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "list" (((:keyword "if") . 1) ((:symbol "libs") . 1) ((:keyword "return") . 1) (nil . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1)) "deps" (((:file "/home/nieel/dev/cppm/src/config/bin.cpp") . 1) ((:symbol "bin") . 1) (c++-mode . 1) (nil . 1)) "touch Application.mk" ((eshell-mode . 1) (nil . 1)) "first" (((:file "/home/nieel/dev/cppm/src/config/bin.cpp") . 1) ((:symbol "g_dep") . 1) (c++-mode . 1) (nil . 1)) "push_back" (((:file "/home/nieel/dev/cppm/src/config/bin.cpp") . 1) ((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:symbol "list") . 1) (c++-mode . 1) (nil . 1)) "find" (((:file "/home/nieel/dev/cppm/src/config/compiler.cpp") . 1) ((:symbol "debug_list") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "Config" (((:symbol "config") . 1) (rust-mode . 1) (nil . 1)) "base_option" (((:keyword "struct") . 1) (rust-mode . 1) (nil . 1)) "cppmopt" ((c++-mode . 4) (nil . 4) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 3) ((:symbol "app_") . 2) ((:keyword "namespace") . 3)) "config/cppm_tool.h" ((c++-mode . 1) (nil . 1)) "config" ((rust-mode . 1) (nil . 1)) "algorithm" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) (c++-mode . 2) (nil . 2) ((:symbol "nil") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1)) "Rectangle" (((:keyword "private") . 1) ((:keyword "for") . 1)) "virtual" (((:file "/home/nieel/school/cpp/src/main.cpp") . 35) ((:keyword "public") . 8) (c++-mode . 35) (nil . 35) ((:keyword "return") . 26) ((:symbol "p2") . 1) ((:keyword "private") . 1)) "util/filesystem.h" ((c++-mode . 1) (nil . 1)) "fflush" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "build_option" (((:keyword "let") . 1)) "borrow" (((:symbol "nil") . 1) ((:symbol "cmake_option") . 1) ((:keyword "mut") . 1)) "add_generator_type" (((:keyword "if") . 1)) "reverse_find_file" (((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:symbol "filesystem") . 1) ((:keyword "crate") . 1) (rust-mode . 1) (nil . 1)) "protected" (((:file "/home/nieel/dev/cppm/include/config/base_target.h") . 1) (c++-mode . 8) (nil . 8) ((:file "/home/nieel/school/cpp/src/main.cpp") . 7) ((:keyword "public") . 3) ((:keyword "return") . 1) ((:keyword "virtual") . 1) ((:keyword "class") . 2)) "base_target" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:symbol "lib") . 1) ((:keyword "auto") . 1) (c++-mode . 1) (nil . 1)) "get_sources" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:keyword "auto") . 1) (c++-mode . 1) (nil . 1)) "gen_sources" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) (c++-mode . 1) (nil . 1)) "add_compile_options" (((:keyword "elseif") . 1)) "borrow_mut" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:symbol "cmake_option") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "begin" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:symbol "list") . 1) ((:keyword "return") . 1) (c++-mode . 2) (nil . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "switch") . 1)) "_IO_jump_t" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "cmake" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "build_command" (((:keyword "mut") . 1)) "cppm build --ntc" ((eshell-mode . 8) (nil . 8)) "radius" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "public") . 1) (c++-mode . 1) (nil . 1)) "value" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "stdio.h" (((:symbol "nil") . 1) (nil . 1) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1) (c-mode . 1)) "rm -r ~/.cppm/tool/" ((eshell-mode . 1) (nil . 1)) "get_area_b" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "protected") . 1) (c++-mode . 1) (nil . 1)) "pop_front" (((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1) ((:symbol "args_") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "ispell-dictionary" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "is_none" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "if") . 1) (rust-mode . 1) (nil . 1)) "Default" (((:file "/home/nieel/dev/cppm/src/config.rs") . 1) ((:symbol "Deserialize") . 1) (rust-mode . 1) (nil . 1)) "unwrap_or_default" (((:symbol "nil") . 1)) "/home/" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "math.h" (((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) ((:symbol "nil") . 1) (c++-mode . 1) (nil . 1)) "eshell-command" (((:keyword "lambda") . 1)) "./forkexec.log" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "systemd" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "./fork-exec.cpp" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "rm forkexec.log" ((eshell-mode . 3) (nil . 3)) "unwrap_or_else" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1)) "fcntl.h" (((:file "/home/nieel/school/system/src/forkexec_parent.cpp") . 1) ((:symbol "nil") . 3) (c++-mode . 1) (nil . 3) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1) (c-mode . 2) ((:file "/home/nieel/school/system/src/fork_pipe.c") . 1)) "argv_child" (((:file "/home/nieel/dev/school/system/src/linked_ch0.cpp") . 1) ((:keyword "static") . 1) (c++-mode . 1) (nil . 1)) "sys/stat.h" (((:file "/home/nieel/school/system/src/forkexec_parent.cpp") . 1) ((:symbol "nil") . 2) (c++-mode . 1) (nil . 2) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1) (c-mode . 1)) "description" (((:file "/home/nieel/school/system/src/system_note.org") . 17) (org-mode . 17) (nil . 17)) "buf_msg" (((:file "/home/nieel/dev/school/system/src/open_fd.cpp") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "org-babel-execute-maybe" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./forkexec_parent" ((eshell-mode . 3) (nil . 3)) "unwrap_or" (((:symbol "nil") . 1) (rust-mode . 1) (nil . 1)) "vector" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "destroy" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "setbuf" (((:file "/home/nieel/school/system/src/system_note.org") . 3) (org-mode . 3) (nil . 3)) "Value" (((:symbol "Self") . 1)) "OptionExtend" ((rust-mode . 1) (nil . 1)) "function" (((:file "/home/nieel/school/system/src/system_note.org") . 5) (org-mode . 5) (nil . 5)) "ivy-historian-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "shared" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "Type" (((:symbol "Self") . 1) ((:keyword "self") . 1)) "option_extend" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1)) "atoi" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "shmctl" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "excl" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "create" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "arguments" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "get_radius" ((c++-mode . 4) (nil . 4) ((:file "/home/nieel/school/cpp/src/main.cpp") . 4) ((:symbol "c") . 1) ((:keyword "private") . 2) ((:symbol "c2") . 1) ((:symbol "b") . 1) ((:keyword "return") . 2) ((:symbol "a") . 1)) "cmd명령어" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "ls -l ../build/cpp" ((eshell-mode . 1) (nil . 1)) "rmid" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "use-package-keywords" (((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "addressof" (((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) (c++-mode . 1) (nil . 1) ((:keyword "namespace") . 1)) "/home/nieel/" (((:file "/home/nieel/dev/nlpo/cppm.toml") . 1) ((:symbol "-DCMAKE_INSTALL_PREFIX") . 1) (toml-mode . 1) (nil . 1)) "include" ((nil . 2) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/posix_msg.c") . 1) (c-mode . 1)) "FetchContent" (((:file "/home/nieel/dev/cppm/cmake/cppm_tool.cmake") . 1) ((:keyword "function") . 1) (cmake-mode . 1) (nil . 1)) "counsel-switch-buffer" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "require" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "rm -r ../.cppm/repo/" ((eshell-mode . 1) (nil . 1)) "shiplift" (((:keyword "use") . 1) ((:file "/home/nieel/dev/alchemist/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "newline" (((:file "/home/nieel/.emacs.d/config.org") . 1) (org-mode . 3) (nil . 3) ((:file "/home/nieel/school/system/src/system_note.org") . 2)) "Hunter" (((:file "/home/nieel/dev/cppm/src/config/dependency.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "sudo cppm build -c install" ((eshell-mode . 1) (nil . 1)) "sizeof" (((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) (c++-mode . 1) (nil . 1)) "p_regex_str" (((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) (c++-mode . 1) (nil . 1)) "subcommand" (((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:symbol "nil") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "add_money" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "p") . 1) ((:keyword "static") . 1) (c++-mode . 1) (nil . 1)) "shared_money_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 4) ((:keyword "static") . 4) (c++-mode . 4) (nil . 4) ((:symbol "p") . 1) ((:symbol "Person") . 2)) "re_expr" (((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) ((:symbol "nil") . 1) (c++-mode . 1) (nil . 1)) "with_name" (((:symbol "SubCommand") . 1) ((:keyword "fn") . 1) ((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:symbol "Arg") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "debug_list" (((:keyword "if") . 1)) "BaseOption" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "mod") . 1)) "Build" (((:file "/home/nieel/dev/cppm/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "p_array" (((:keyword "for") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "extended" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "set_radius" (((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) (c++-mode . 1) (nil . 1) ((:symbol "c") . 1) ((:keyword "private") . 1)) "communication" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "as_ref" (((:symbol "cmake_option") . 1) ((:keyword "mut") . 1) ((:symbol "cmake") . 1) ((:symbol "option") . 1) ((:file "/home/nieel/dev/cppm/src/option_extend.rs") . 1) ((:symbol "self") . 1) ((:keyword "self") . 1)) "company-yasnippet" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "RefCell" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) (rust-mode . 1) (nil . 1)) "case" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "switch") . 1) (c++-mode . 1) (nil . 1)) "cargo +nightly install racer" ((eshell-mode . 1) (nil . 1)) "private" ((nil . 2) ((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "private") . 1) (c++-mode . 1)) "get_area" ((c++-mode . 2) (nil . 2) ((:symbol "c") . 1) ((:keyword "private") . 1) ((:keyword "return") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:symbol "Circle") . 1) ((:keyword "for") . 1) ((:keyword "protected") . 1)) "mmap's" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "call_back" (((:file "/home/nieel/dev/cppm/src/option/cppm.cpp") . 1) ((:symbol "nil") . 1) (c++-mode . 1) (nil . 1)) "rm pspawn.log" ((eshell-mode . 5) (nil . 5)) "cppm run -b" ((eshell-mode . 1) (nil . 1)) "company-complete-selection" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "abbrev-all-caps" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "O_CLOEXEC" (((:file "/home/nieel/school/system/src/pspawn1.cpp") . 1) ((:symbol "O_APPEND") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "git commit -m \"nlpo change\"" ((eshell-mode . 1) (nil . 1)) "rm_matchtab" (((:keyword "sizeof") . 1) ((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) (c++-mode . 1) (nil . 1)) "about" (((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:symbol "nil") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "ls ~/.cppm/install/oboe/lastest/" ((eshell-mode . 3) (nil . 3)) "cat abc.toml" ((eshell-mode . 4) (nil . 4)) "release" ((nil . 1)) "cat ~/dev/cppkg/oboe/lastest/oboe.cmake.in" ((eshell-mode . 1) (nil . 1)) "cd ../AndroidStudioProjects/" ((eshell-mode . 1) (nil . 1)) "./cppm cppkg init -d \"a\" -m \"a\" -g \"a\" abc" ((eshell-mode . 1) (nil . 1)) "set_color" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "c") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "cppm build" ((eshell-mode . 2) (nil . 2)) "CMAKE_CXX_FLAGS_DEBUG" (((:keyword "if") . 1) ((:file "/home/nieel/dev/nlpo/CMakeLists.txt") . 1) ((:keyword "elseif") . 1)) "show_color_point" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "c") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "unsigned" (((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "add_const" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "virtual") . 1) (c++-mode . 1) (nil . 1)) "switch" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "standard" ((nil . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cppm.toml") . 1) (toml-mode . 1)) "ColorPoint" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "stdint.h>" (((:file "/home/nieel/dev/school/system/src/memory_lock.cpp") . 1) ((:symbol "include") . 1) (c++-mode . 1) (nil . 1)) "sz_mem" (((:keyword "sizeof") . 1)) "set_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 3) ((:keyword "return") . 1) (c++-mode . 3) (nil . 3) ((:symbol "cone") . 1) ((:keyword "private") . 1) ((:keyword "public") . 1)) "int" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "stdlib.h>" (((:symbol "include") . 1) (c++-mode . 1) (nil . 1)) "unistd.h>" (((:symbol "include") . 1) (nil . 1) ((:file "/home/nieel/school/system/src/fork_process.c") . 1) (c-mode . 1)) "p_str" (((:file "/home/nieel/dev/school/system/src/memory_lock.cpp") . 1) ((:keyword "sizeof") . 1) (c++-mode . 1) (nil . 1)) "set_new_handler" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "protected") . 2) (c++-mode . 2) (nil . 2)) "./fifo_write" ((eshell-mode . 2) (nil . 2)) "rtags-start-process-unless-running" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./cpp" ((eshell-mode . 1) (nil . 1)) "a_input" (((:keyword "else") . 1)) "evil-leader/set-key" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "dired-mode-hook" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":keys/page" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "hack-dir-local-variables--warned-coding" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-env-version" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-python-executable" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-env-enable-python" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-enable-word-count" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "copy_address" (((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) ((:keyword "namespace") . 1) (c++-mode . 1) (nil . 1)) "doom-modeline-env-enable-ruby" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "doom-modeline-env-elixir-executable" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-env-ruby-executable" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-env-enable-elixir" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-env-go-executable" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-env-rust-executable" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-env-perl-executable" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "cat pspawn.log" ((eshell-mode . 9) (nil . 9)) "doom-modeline--battery-status" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "cat forkexec.log" ((eshell-mode . 3) (nil . 3)) "disabled" (((:file "/home/nieel/.emacs.d/config.org") . 3) (org-mode . 3) (nil . 3) ((:symbol "nil") . 2)) "is_show" (((:file "/home/nieel/dev/nlpo/include/nlpo/command.h") . 1) ((:keyword "const") . 1) (c++-mode . 1) (nil . 1)) "./mmap_hugepage huge 1024" ((eshell-mode . 1) (nil . 1)) "./mmap_hugepage huge 100" ((eshell-mode . 1) (nil . 1)) "./mmap_hugepage huge 512" ((eshell-mode . 3) (nil . 3)) "./mmap_hugepage" ((eshell-mode . 2) (nil . 2)) "./mmap_hugepage huge 8192" ((eshell-mode . 1) (nil . 1)) "hugeadm --pool-list" ((eshell-mode . 2) (nil . 2)) "./mmap_hugepage n 8192" ((eshell-mode . 1) (nil . 1)) "IPC_PRIVATE" (((:file "/home/nieel/dev/school/system/src/sysv_shm.c") . 1) ((:keyword "if") . 1) (c-mode . 1) (nil . 1)) "IPC_CREAT" (((:file "/home/nieel/dev/school/system/src/sysv_shm.c") . 1) ((:keyword "if") . 1) (c-mode . 1) (nil . 1)) "IPC_EXCL" (((:file "/home/nieel/dev/school/system/src/sysv_shm.c") . 1) ((:symbol "IPC_CREAT") . 1) ((:keyword "if") . 1) (c-mode . 1) (nil . 1)) "process는" (((:file "/home/nieel/school/system/src/system_note.org") . 3) (org-mode . 3) (nil . 3)) "0644" (((:file "/home/nieel/school/system/src/system_note.org") . 2) (org-mode . 2) (nil . 2)) "1234" (((:file "/home/nieel/school/system/src/system_note.org") . 2) (org-mode . 2) (nil . 2)) "clone" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:symbol "nil") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "stdio.h>" (((:file "/home/nieel/school/system/src/fork_process.c") . 1) ((:symbol "include") . 1) (c-mode . 1) (nil . 1)) "./fork_process" ((eshell-mode . 13) (nil . 13)) "cargo run build" ((eshell-mode . 1) (nil . 1)) "20274" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "linked" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "open" (((:file "/home/nieel/school/system/src/system_note.org") . 3) (org-mode . 3) (nil . 3)) "endif" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "rdwr" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "mmap" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "read" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "write" (((:file "/home/nieel/school/system/src/system_note.org") . 2) (org-mode . 2) (nil . 2)) "exec" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "none" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "sync" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "stat" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "close" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "pizza" (((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) ((:symbol "nil") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "./pspawn1" ((eshell-mode . 10) (nil . 10)) "ls ../../../.cppm/" ((eshell-mode . 1) (nil . 1)) "mv alsp_3rd_20180206.tar ../school/system/" ((eshell-mode . 1) (nil . 1)) "waitforzero" (((:file "/home/nieel/school/system/cppm.toml") . 1) (toml-mode . 1) (nil . 1)) "lib_sysv_sem.h" (((:file "/home/nieel/school/system/src/lib_sysv_sem.c") . 1) (c-mode . 2) (nil . 2) ((:file "/home/nieel/school/system/src/sysv_sem.c") . 1)) "./sysv_msg s ../src/sysv_msg.txt" ((eshell-mode . 2) (nil . 2)) "./sysv_msg r 2" ((eshell-mode . 1) (nil . 1)) "\"option/" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 6) (c++-mode . 6) (nil . 6)) "<fmt/" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "ccls-tree-set-root" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "expand-file-name" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "option/" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "operator=" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1) ((:symbol "CppmPackage") . 1) ((:keyword "if") . 1) (c++-mode . 2) (nil . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "switch") . 1)) "lsp-ui-sideline--align" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-ui-sideline-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-ui-peek-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "add_command" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 2) ((:symbol "app_") . 2) ((:keyword "namespace") . 2) (c++-mode . 2) (nil . 2)) "abbr" (((:file "/home/nieel/.emacs.d/config.org") . 1) (org-mode . 1) (nil . 1)) "cppm cppkg init -d \"Oboe is a C++ library that makes it easy to build high-performance audio apps on Android.\" -g \"https://github.com/google/oboe.git\" -m \"oboe\" oboe" ((eshell-mode . 1) (nil . 1)) "cppm cppkg init oboe --des \"Oboe is a C++ library that makes it easy to build high-performance audio apps on Android.\" --git \"https://github.com/google/oboe.git\" --module \"oboe\" --version \"lastest\"" ((eshell-mode . 1) (nil . 1)) "p_buf" (((:file "/home/nieel/dev/school/system/src/xrdr_fmt.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "default_command_" (((:file "/home/nieel/dev/nlpo/src/app.cpp") . 2) ((:keyword "if") . 2) (c++-mode . 2) (nil . 2)) "shared_money" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "static") . 2) (c++-mode . 2) (nil . 2)) "Person" (((:file "/home/nieel/school/cpp/src/main.cpp") . 3) ((:keyword "static") . 3) (c++-mode . 3) (nil . 3)) "\"openssl/" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 2) (c++-mode . 2) (nil . 2)) "incgd" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) ((:symbol "cppm") . 1) (c++-mode . 1) (nil . 1)) "\"openssl/aes.h" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "./fork_pipe" ((eshell-mode . 3) (nil . 3)) ":no-require" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "find_library" (((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/CMakeLists.txt") . 2) (cmake-mode . 3) (nil . 3) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1)) "cppm cppkg init -d \"a\" abc" ((eshell-mode . 1) (nil . 1)) "print" (((:file "/home/nieel/dev/cppm/src/option/cppkg_init.cpp") . 1) ((:symbol "fmt") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "./cppm cppkg init -d \"a\" -d \"a\" abc" ((eshell-mode . 6) (nil . 6)) "fmt/format.h" (((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1) ((:symbol "nil") . 1) (c++-mode . 1) (nil . 1)) "cppm cppkg init -m \"a\" -d \"a\" b" ((eshell-mode . 1) (nil . 1)) "load-path" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "display-line-numbers-mode-set-explicitly" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "debug_string" (((:file "/home/nieel/dev/cppm/src/config/compiler.cpp") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "./omp_hello" ((eshell-mode . 2) (nil . 2)) "./mutex_recursive" ((eshell-mode . 1) (nil . 1)) "./mutex_errchk" ((eshell-mode . 1) (nil . 1)) "show_point" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "public") . 1) (c++-mode . 2) (nil . 2) ((:symbol "p") . 1) ((:keyword "private") . 1)) "set_point" (((:file "/home/nieel/school/cpp/src/main.cpp") . 3) ((:symbol "p") . 2) ((:keyword "private") . 3) (c++-mode . 3) (nil . 3) ((:symbol "c") . 1)) "class" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "private") . 2) (c++-mode . 2) (nil . 2)) "radius_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:symbol "2") . 1) ((:keyword "public") . 2) (c++-mode . 2) (nil . 2) ((:symbol "radius_") . 1)) "override" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "public") . 2) (c++-mode . 2) (nil . 2)) "Circle" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "height_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "company-dict-enable-yasnippet" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./omp_loop1" ((eshell-mode . 1) (nil . 1)) "./stack_heap" ((eshell-mode . 1) (nil . 1)) "./cond_var" ((eshell-mode . 1) (nil . 1)) "add-hook" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./memory_lock 100" ((eshell-mode . 1) (nil . 1)) "irony-mode-hook" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "irony-eldoc" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./memory_lock 1000" ((eshell-mode . 1) (nil . 1)) "calc" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "cal") . 1) ((:keyword "break") . 1) (c++-mode . 1) (nil . 1)) "defcustom" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Derived" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "override") . 1) (c++-mode . 1) (nil . 1)) "ispell-program-name" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "interactive" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "ispell-change-dictionary" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "make_unique" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "std") . 1) ((:keyword "auto") . 1) (c++-mode . 1) (nil . 1)))) company-statistics--log [("override" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("Derived" (nil . 1) (c++-mode . 1) ((:keyword "override") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("ispell-program-name" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("ispell-dictionary" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("ispell-change-dictionary" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("make_unique" (nil . 1) (c++-mode . 1) ((:keyword "auto") . 1) ((:symbol "std") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("MMAP_SIZE" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:file "/home/nieel/dev/school/system/src/mmap_ran.c") . 1)) ("./mmap_ran" (nil . 1) (eshell-mode . 1)) ("./mmap_ran" (nil . 1) (eshell-mode . 1)) ("./mmap_ran" (nil . 1) (eshell-mode . 1)) ("./mmap_ran" (nil . 1) (eshell-mode . 1)) ("./memory_lock 1000" (nil . 1) (eshell-mode . 1)) ("./memory_lock 100" (nil . 1) (eshell-mode . 1)) ("./memory_lock 100" (nil . 1) (eshell-mode . 1)) ("./memory_lock 100" (nil . 1) (eshell-mode . 1)) ("dired-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("hack-dir-local-variables--warned-coding" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) (":keys/page" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("/home/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("algorithm" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1)) ("doom-modeline-python-executable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-enable-word-count" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-env-version" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-env-enable-ruby" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 2)) ("doom-modeline-env-enable-python" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-env-enable-ruby" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-env-enable-elixir" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-env-ruby-executable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-env-elixir-executable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-env-go-executable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-env-perl-executable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-env-rust-executable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("addressof" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1)) ("copy_address" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1)) ("doom-modeline--battery-status" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("disabled" (nil . 1) (org-mode . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("radius" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1)) ("get_area" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "c") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1)) ("set_radius" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "c") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1)) ("math.h" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1)) ("cppm build" (nil . 1) (eshell-mode . 1)) ("is_show" (nil . 1) (c++-mode . 1) ((:keyword "const") . 1) ((:file "/home/nieel/dev/nlpo/include/nlpo/command.h") . 1)) ("./mmap_hugepage huge 1024" (nil . 1) (eshell-mode . 1)) ("./mmap_hugepage huge 100" (nil . 1) (eshell-mode . 1)) ("./mmap_hugepage huge 512" (nil . 3) (eshell-mode . 3)) ("./mmap_hugepage" (nil . 2) (eshell-mode . 2)) ("./mmap_hugepage huge 512" (nil . 1) (eshell-mode . 1)) ("./mmap_hugepage huge 512" (nil . 1) (eshell-mode . 1)) ("./mmap_hugepage huge 8192" (nil . 1) (eshell-mode . 1)) ("hugeadm --pool-list" (nil . 2) (eshell-mode . 2)) ("./mmap_hugepage" (nil . 1) (eshell-mode . 1)) ("hugeadm --pool-list" (nil . 1) (eshell-mode . 1)) ("./mmap_hugepage n 8192" (nil . 1) (eshell-mode . 1)) ("IPC_PRIVATE" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:file "/home/nieel/dev/school/system/src/sysv_shm.c") . 1)) ("IPC_CREAT" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:file "/home/nieel/dev/school/system/src/sysv_shm.c") . 1)) ("IPC_EXCL" (nil . 1) (c-mode . 1) ((:keyword "if") . 1) ((:symbol "IPC_CREAT") . 1) ((:file "/home/nieel/dev/school/system/src/sysv_shm.c") . 1)) ("process는" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/system/src/system_note.org") . 2)) ("0644" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/system/src/system_note.org") . 2)) ("1234" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/system/src/system_note.org") . 2)) ("process는" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("systemd" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("0644" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("1234" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("include" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("./fork-exec.cpp" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("./forkexec.log" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("unistd.h>" (nil . 1) (c-mode . 1) ((:symbol "include") . 1) ((:file "/home/nieel/school/system/src/fork_process.c") . 1)) ("stdio.h>" (nil . 1) (c-mode . 1) ((:symbol "include") . 1) ((:file "/home/nieel/school/system/src/fork_process.c") . 1)) ("./fork_process" (nil . 10) (eshell-mode . 10)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("description" (nil . 10) (org-mode . 10) ((:file "/home/nieel/school/system/src/system_note.org") . 10)) ("list" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("sys/types.h" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/forkexec_parent.cpp") . 1)) ("sys/stat.h" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/forkexec_parent.cpp") . 1)) ("fcntl.h" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/forkexec_parent.cpp") . 1)) ("stdlib.h" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/forkexec_parent.cpp") . 1)) ("cat forkexec.log" (nil . 1) (eshell-mode . 1)) ("rm forkexec.log" (nil . 3) (eshell-mode . 3)) ("rm forkexec.log" (nil . 1) (eshell-mode . 1)) ("./forkexec_parent" (nil . 1) (eshell-mode . 1)) ("cat forkexec.log" (nil . 1) (eshell-mode . 1)) ("rm forkexec.log" (nil . 1) (eshell-mode . 1)) ("20274" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("process는" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("vector" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("linked" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("fflush" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("open" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("option" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/system/src/system_note.org") . 2)) ("destroy" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("setbuf" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("endif" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("option" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("extended" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("newline" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 2)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("newline" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("rdwr" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("function" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("mmap" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("shared" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("private" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("read" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("write" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("exec" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("none" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("sync" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("write" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("setbuf" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("communication" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("atoi" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("function" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("function" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("function" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("create" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("excl" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("shmctl" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("cmd명령어" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("stat" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("setbuf" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("rmid" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("open" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("function" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("open" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("mmap's" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("close" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("arguments" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("description" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) ("get_radius" (nil . 1) (c++-mode . 1) ((:keyword "private") . 2) ((:symbol "c") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 4)) ("get_radius" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "c2") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("get_radius" (nil . 1) (c++-mode . 1) ((:keyword "return") . 2) ((:symbol "b") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("get_radius" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:symbol "a") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("./forkexec_parent" (nil . 1) (eshell-mode . 1)) ("./pspawn1" (nil . 10) (eshell-mode . 10)) ("cat pspawn.log" (nil . 1) (eshell-mode . 1)) ("rm pspawn.log" (nil . 5) (eshell-mode . 5)) ("./pspawn1" (nil . 1) (eshell-mode . 1)) ("cat pspawn.log" (nil . 1) (eshell-mode . 1)) ("rm pspawn.log" (nil . 1) (eshell-mode . 1)) ("./pspawn1" (nil . 1) (eshell-mode . 1)) ("cat pspawn.log" (nil . 1) (eshell-mode . 1)) ("./pspawn1" (nil . 1) (eshell-mode . 1)) ("cat pspawn.log" (nil . 1) (eshell-mode . 1)) ("./pspawn1" (nil . 1) (eshell-mode . 1)) ("cat pspawn.log" (nil . 1) (eshell-mode . 1)) ("rm pspawn.log" (nil . 1) (eshell-mode . 1)) ("./pspawn1" (nil . 1) (eshell-mode . 1)) ("cat pspawn.log" (nil . 1) (eshell-mode . 1)) ("./pspawn1" (nil . 1) (eshell-mode . 1)) ("rm pspawn.log" (nil . 1) (eshell-mode . 1)) ("./pspawn1" (nil . 1) (eshell-mode . 1)) ("cat pspawn.log" (nil . 1) (eshell-mode . 1)) ("O_CLOEXEC" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "O_APPEND") . 1) ((:file "/home/nieel/school/system/src/pspawn1.cpp") . 1)) ("./pspawn1" (nil . 1) (eshell-mode . 1)) ("rm pspawn.log" (nil . 1) (eshell-mode . 1)) ("./pspawn1" (nil . 1) (eshell-mode . 1)) ("cat pspawn.log" (nil . 1) (eshell-mode . 1)) ("./forkexec_parent" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./fork_process" (nil . 1) (eshell-mode . 1)) ("./posix_regex" (nil . 1) (eshell-mode . 1)) ("./posix_regex" (nil . 1) (eshell-mode . 1)) ("sys/mman.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1)) ("sys/stat.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1)) ("fcntl.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1)) ("stdio.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1)) ("unistd.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1)) ("sys/types.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/system_note.org[*Org Src system_note.org[ C ]*]") . 1)) ("mv alsp_3rd_20180206.tar ../school/system/" (nil . 1) (eshell-mode . 1)) ("lib_sysv_sem.h" (nil . 2) (c-mode . 2) ((:file "/home/nieel/school/system/src/lib_sysv_sem.c") . 1)) ("lib_sysv_sem.h" (nil . 1) (c-mode . 1) ((:file "/home/nieel/school/system/src/sysv_sem.c") . 1)) ("./sysv_sem 5" (nil . 4) (eshell-mode . 4)) ("waitforzero" (nil . 1) (toml-mode . 1) ((:file "/home/nieel/school/system/cppm.toml") . 1)) ("./sysv_sem 5" (nil . 1) (eshell-mode . 1)) ("./sysv_sem 5" (nil . 1) (eshell-mode . 1)) ("./sysv_sem 5" (nil . 1) (eshell-mode . 1)) ("./sysv_msg s ../src/sysv_msg.txt" (nil . 2) (eshell-mode . 2)) ("./sysv_msg r 2" (nil . 1) (eshell-mode . 1)) ("./sysv_msg s ../src/sysv_msg.txt" (nil . 1) (eshell-mode . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/posix_msg.c") . 1)) ("\"option/" (nil . 3) (c++-mode . 3) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 3)) ("\"option/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("<fmt/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("\"option/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("ccls-tree-set-root" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("expand-file-name" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("option/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("option" (nil . 1) (c++-mode . 1) ((:symbol "cppm") . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("CppmPackage" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("operator=" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "CppmPackage") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("lsp-ui-sideline--align" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("lsp-ui-sideline-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("lsp-ui-peek-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("add_command" (nil . 2) (c++-mode . 2) ((:keyword "namespace") . 2) ((:symbol "app_") . 2) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 2)) ("add_command" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:symbol "app_") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("CppmPackage" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("ECHRNG" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:symbol "app_") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("cppmopt" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 3) ((:symbol "app_") . 2) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 3)) ("package/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("package/package.h" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("cppmopt" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:symbol "app_") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("cppmopt" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("abbr" (nil . 1) (org-mode . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("disabled" (nil . 1) (org-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("cppm cppkg init oboe --des \"Oboe is a C++ library that makes it easy to build high-performance audio apps on Android.\" --git \"https://github.com/google/oboe.git\" --module \"oboe\" --version \"lastest\"" (nil . 1) (eshell-mode . 1)) ("cppm cppkg init -d \"Oboe is a C++ library that makes it easy to build high-performance audio apps on Android.\" -g \"https://github.com/google/oboe.git\" -m \"oboe\" oboe" (nil . 1) (eshell-mode . 1)) ("default_command_" (nil . 2) (c++-mode . 2) ((:keyword "if") . 2) ((:file "/home/nieel/dev/nlpo/src/app.cpp") . 2)) ("default_command_" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1)) ("pop_front" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "args_") . 1) ((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1)) ("money_" (nil . 4) (c++-mode . 4) ((:keyword "public") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 4)) ("money_" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("shared_money_" (nil . 4) (c++-mode . 4) ((:keyword "static") . 4) ((:file "/home/nieel/school/cpp/src/main.cpp") . 4)) ("shared_money" (nil . 2) (c++-mode . 2) ((:keyword "static") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("shared_money" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 2) ((:symbol "p") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("add_money" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("shared_money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("shared_money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "Person") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("shared_money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "Person") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("Person" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("disabled" (nil . 1) (org-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("Person" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("Person" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("\"openssl/" (nil . 2) (c++-mode . 2) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 2)) ("\"option/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("\"option/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("incgd" (nil . 1) (c++-mode . 1) ((:symbol "cppm") . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("\"openssl/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("\"openssl/aes.h" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("\"option/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("sys/types.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/fork_pipe.c") . 1)) ("fcntl.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/fork_pipe.c") . 1)) ("./fork_pipe" (nil . 3) (eshell-mode . 3)) ("./fork_pipe" (nil . 1) (eshell-mode . 1)) ("./fork_pipe" (nil . 1) (eshell-mode . 1)) (":no-require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("find_library" (nil . 3) (cmake-mode . 3) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/CMakeLists.txt") . 2)) ("standard" (nil . 1) (toml-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cppm.toml") . 1)) ("find_library" (nil . 1) (cmake-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/CMakeLists.txt") . 1)) ("find_library" (nil . 1) (cmake-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1)) ("cppm cppkg init -m a -v 1.0.0 abc" (nil . 2) (eshell-mode . 2)) ("print" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "fmt") . 1) ((:file "/home/nieel/dev/cppm/src/option/cppkg_init.cpp") . 1)) ("cppm cppkg init -m a -v 1.0.0 abc" (nil . 1) (eshell-mode . 1)) ("cppm cppkg init -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("fmt/format.h" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 6) (eshell-mode . 6)) ("cppm cppkg init -m \"a\" -d \"a\" b" (nil . 1) (eshell-mode . 1)) ("rm abc.toml" (nil . 2) (eshell-mode . 2)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("cppm build" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("cat abc.toml" (nil . 4) (eshell-mode . 4)) ("cat abc.toml" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("cat abc.toml" (nil . 1) (eshell-mode . 1)) ("rm abc.toml" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -m \"a\" -g \"a\" abc" (nil . 1) (eshell-mode . 1)) ("cat abc.toml" (nil . 1) (eshell-mode . 1)) ("dependencies" (nil . 1) (toml-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cppm.toml") . 1)) ("target_include_directories" (nil . 1) (cmake-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1)) ("cd ../AndroidStudioProjects/" (nil . 1) (eshell-mode . 1)) ("cat ~/dev/cppkg/oboe/lastest/oboe.cmake.in" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("ls ~/.cppm/install/oboe/lastest/" (nil . 3) (eshell-mode . 3)) ("ls ~/.cppm/install/oboe/lastest/" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("add_subdirectory" (nil . 1) (cmake-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("ls ~/.cppm/install/oboe/lastest/" (nil . 1) (eshell-mode . 1)) ("touch Application.mk" (nil . 1) (eshell-mode . 1)) ("load-path" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("display-line-numbers-mode-set-explicitly" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("./omp_hello" (nil . 1) (eshell-mode . 1)) ("./mutex_recursive" (nil . 1) (eshell-mode . 1)) ("./mutex_errchk" (nil . 1) (eshell-mode . 1)) ("show_point" (nil . 2) (c++-mode . 2) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("show_point" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_color" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "c") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_point" (nil . 2) (c++-mode . 2) ((:keyword "private") . 2) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("set_point" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "c") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("show_color_point" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "c") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("class" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("radius_" (nil . 2) (c++-mode . 2) ((:keyword "public") . 2) ((:symbol "2") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("radius_" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:symbol "radius_") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("override" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("Circle" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("get_area" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:symbol "Circle") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("height_" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 8) (c++-mode . 8) ((:keyword "public") . 8) ((:file "/home/nieel/school/cpp/src/main.cpp") . 8)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("add_const" (nil . 1) (c++-mode . 1) ((:keyword "virtual") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("company-dict-enable-yasnippet" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 26) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("company-yasnippet" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("company-complete-selection" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("private" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("_IO_jump_t" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("case" (nil . 1) (c++-mode . 1) ((:keyword "switch") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("switch" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("begin" (nil . 1) (c++-mode . 1) ((:keyword "switch") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_point" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "public") . 3) ((:file "/home/nieel/school/cpp/src/main.cpp") . 5)) ("ColorPoint" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "p2") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_" (nil . 3) (c++-mode . 3) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 3)) ("int" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "virtual") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "cone") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("class" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("radius" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_new_handler" (nil . 2) (c++-mode . 2) ((:keyword "protected") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("set_new_handler" (nil . 1) (c++-mode . 1) ((:keyword "protected") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("get_area" (nil . 1) (c++-mode . 1) ((:keyword "protected") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("get_area_b" (nil . 1) (c++-mode . 1) ((:keyword "protected") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("./omp_loop1" (nil . 1) (eshell-mode . 1)) ("./omp_hello" (nil . 1) (eshell-mode . 1)) ("./fifo_write" (nil . 2) (eshell-mode . 2)) ("./cond_var" (nil . 1) (eshell-mode . 1)) ("./fifo_write" (nil . 1) (eshell-mode . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("irony-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("irony-eldoc" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("rtags-start-process-unless-running" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "class") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "class") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("operator=" (nil . 1) (c++-mode . 1) ((:keyword "switch") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("calc" (nil . 1) (c++-mode . 1) ((:keyword "break") . 1) ((:symbol "cal") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("./cpp" (nil . 1) (eshell-mode . 1)) ("defcustom" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("rtags-verify-protocol-version" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defcustom") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1))] company-statistics--index 9)