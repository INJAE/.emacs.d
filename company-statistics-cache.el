(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("centaur-tabs-set-close-button" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "<vi" (((:file "/home/nieel/.emacs.d/config.org") . 1) (org-mode . 1) (nil . 1)) "url-package-name" (((:keyword "setq") . 1)) "upkg" (((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "minimum" ((text-mode . 1) (nil . 2) ((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1)) "dependencies" ((markdown-mode . 1) ((:file "/home/nieel/dev/cppm/cppm.toml") . 1) (toml-mode . 2) ((:symbol "config") . 1) (nil . 2) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cppm.toml") . 1)) "unwrap" (((:symbol "option") . 1) ((:keyword "if") . 1) ((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "package" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1)) "Docker" (((:file "/home/nieel/dev/alchemist/src/main.rs") . 1) ((:symbol "shiplift") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "package/package.h" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1) (c++-mode . 1) (nil . 1)) "ECHRNG" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1) ((:symbol "app_") . 1) ((:keyword "namespace") . 1) (c++-mode . 1) (nil . 1)) "package/" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1) (c++-mode . 1) (nil . 1)) "table" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "money_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 4) ((:keyword "public") . 2) (c++-mode . 4) (nil . 4) ((:symbol "p") . 2) ((:keyword "static") . 2)) "enable_language" (((:file "/home/nieel/dev/test/cppkg_test/cmake/cppm_tool.cmake") . 1) (cmake-mode . 1) (nil . 1)) "p_dest_str" (((:keyword "if") . 1) ((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) (c++-mode . 1) (nil . 1)) "SubCommand" (((:keyword "use") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "errbuf" (((:keyword "sizeof") . 1)) "rtags-verify-protocol-version" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "defcustom") . 1) (emacs-lisp-mode . 1) (nil . 1)) "sudo chown -R nieel.nieel ~/.cppm" ((eshell-mode . 1) (nil . 1)) "libs" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:symbol "config") . 1) ((:keyword "auto") . 1) (c++-mode . 1) (nil . 1)) "~/Dropbox/" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "cppm cppkg init -m a -v 1.0.0 abc" ((eshell-mode . 2) (nil . 2)) "lambda" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 4) (emacs-lisp-mode . 5) (nil . 5) ((:keyword "use-package") . 2) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1) ((:keyword "defun") . 1)) "sys/types.h" (((:symbol "nil") . 1) (nil . 1) (c-mode . 1) ((:file "/home/nieel/school/system/src/fork_pipe.c") . 1)) "add_subdirectory" (((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1) (cmake-mode . 1) (nil . 1)) "rm abc.toml" ((eshell-mode . 2) (nil . 2)) "build" (((:keyword "use") . 1)) "target_include_directories" (((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1) (cmake-mode . 1) (nil . 1)) "option" ((c++-mode . 2) ((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:keyword "use") . 1) ((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) (rust-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 2) ((:symbol "cppm") . 2) ((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 2)) "empty" (((:file "/home/nieel/dev/cppm/src/config/bin.cpp") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "list" (((:keyword "if") . 1) ((:symbol "libs") . 1) ((:keyword "return") . 1)) "deps" (((:file "/home/nieel/dev/cppm/src/config/bin.cpp") . 1) ((:symbol "bin") . 1) (c++-mode . 1) (nil . 1)) "touch Application.mk" ((eshell-mode . 1) (nil . 1)) "first" (((:file "/home/nieel/dev/cppm/src/config/bin.cpp") . 1) ((:symbol "g_dep") . 1) (c++-mode . 1) (nil . 1)) "push_back" (((:file "/home/nieel/dev/cppm/src/config/bin.cpp") . 1) ((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:symbol "list") . 1) (c++-mode . 1) (nil . 1)) "find" (((:file "/home/nieel/dev/cppm/src/config/compiler.cpp") . 1) ((:symbol "debug_list") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "Config" (((:symbol "config") . 1) (rust-mode . 1) (nil . 1)) "base_option" (((:keyword "struct") . 1) (rust-mode . 1) (nil . 1)) "cppmopt" ((c++-mode . 4) (nil . 4) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 3) ((:symbol "app_") . 2) ((:keyword "namespace") . 3)) "config/cppm_tool.h" ((c++-mode . 1) (nil . 1)) "config" ((rust-mode . 1) (nil . 2) ((:file "/home/nieel/.emacs.d/config.org") . 1) ((:symbol "nil") . 1) (org-mode . 1)) "algorithm" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) (c++-mode . 1) (nil . 6) ((:file "/home/nieel/school/network_final.org") . 5) (org-mode . 5)) "Rectangle" (((:keyword "private") . 1) ((:keyword "for") . 1)) "virtual" (((:file "/home/nieel/school/cpp/src/main.cpp") . 35) ((:keyword "public") . 8) (c++-mode . 36) (nil . 36) ((:keyword "return") . 26) ((:symbol "p2") . 1) ((:keyword "private") . 1) ((:file "/home/nieel/dev/scpc/src/main.cpp") . 1) ((:symbol "dcache") . 1) ((:keyword "while") . 1)) "util/filesystem.h" ((c++-mode . 1) (nil . 1)) "progma" (((:file "/home/nieel/school/system_final.org") . 1) ((:symbol "nil") . 1) (org-mode . 1) (nil . 1)) "build_option" (((:keyword "let") . 1)) "borrow" (((:symbol "nil") . 1) ((:symbol "cmake_option") . 1) ((:keyword "mut") . 1)) "add_generator_type" (((:keyword "if") . 1)) "reverse_find_file" (((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:symbol "filesystem") . 1) ((:keyword "crate") . 1) (rust-mode . 1) (nil . 1)) "protected" (((:file "/home/nieel/dev/cppm/include/config/base_target.h") . 1) (c++-mode . 9) (nil . 9) ((:file "/home/nieel/school/cpp/src/main.cpp") . 8) ((:keyword "public") . 4) ((:keyword "return") . 1) ((:keyword "virtual") . 1) ((:keyword "class") . 2)) "base_target" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:symbol "lib") . 1) ((:keyword "auto") . 1) (c++-mode . 1) (nil . 1)) "get_sources" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:keyword "auto") . 1) (c++-mode . 1) (nil . 1)) "gen_sources" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) (c++-mode . 1) (nil . 1)) "add_compile_options" (((:keyword "elseif") . 1)) "borrow_mut" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:symbol "cmake_option") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "begin" (((:file "/home/nieel/dev/cppm/src/config/cppm_tool.cpp") . 1) ((:symbol "list") . 1) ((:keyword "return") . 1) (c++-mode . 3) (nil . 3) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "switch") . 1) ((:symbol "sv") . 1) ((:keyword "for") . 1)) "_IO_jump_t" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "cmake" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "build_command" (((:keyword "mut") . 1)) "cppm build --ntc" ((eshell-mode . 8) (nil . 8)) "radius" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "public") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) ((:keyword "return") . 1)) "value" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "centaur" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 2) ((:file "/home/nieel/.emacs.d/config.org") . 1) (org-mode . 1)) "rm -r ~/.cppm/tool/" ((eshell-mode . 1) (nil . 1)) "get_area_b" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "protected") . 1) (c++-mode . 1) (nil . 1)) "pop_front" (((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1) ((:symbol "args_") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "ispell-dictionary" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "is_none" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "if") . 1) (rust-mode . 1) (nil . 1)) "Default" (((:file "/home/nieel/dev/cppm/src/config.rs") . 1) ((:symbol "Deserialize") . 1) (rust-mode . 1) (nil . 1)) "unwrap_or_default" (((:symbol "nil") . 1)) "mutex" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "xunspecifiedx" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "eshell-command" (((:keyword "lambda") . 1)) "mac을" (((:file "/home/nieel/school/network_final.org") . 2) (org-mode . 2) (nil . 2)) "0644" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "broadcast를" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "unwrap_or_else" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1)) "fcntl.h" (((:symbol "nil") . 1) (nil . 1) (c-mode . 1) ((:file "/home/nieel/school/system/src/fork_pipe.c") . 1)) "argv_child" (((:file "/home/nieel/dev/school/system/src/linked_ch0.cpp") . 1) ((:keyword "static") . 1) (c++-mode . 1) (nil . 1)) "buf_msg" (((:file "/home/nieel/dev/school/system/src/open_fd.cpp") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "org-babel-execute-maybe" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "unwrap_or" (((:symbol "nil") . 1) (rust-mode . 1) (nil . 1)) "vector" ((org-mode . 1) (nil . 1) ((:file "/home/nieel/school/network_final.org") . 1)) "firstprivate" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "evil-indent-plus-default-bindings" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Value" (((:symbol "Self") . 1)) "OptionExtend" ((rust-mode . 1) (nil . 1)) "ivy-historian-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "emplace_back" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "sv") . 1) ((:keyword "for") . 1) (c++-mode . 1) (nil . 1)) "Type" (((:symbol "Self") . 1) ((:keyword "self") . 1)) "option_extend" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1)) "evil-iedit-state/iedit-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "Vec" (((:file "/home/nieel/dev/rstudy/src/main.rs") . 3) ((:keyword "use") . 2) (rust-mode . 3) (nil . 3) ((:keyword "let") . 1)) "get_radius" (((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "return") . 1)) "ls -l ../build/cpp" ((eshell-mode . 1) (nil . 1)) "turn-on-elisp-slime-nav-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "use-package-keywords" (((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "hugeadm --pool-list" ((eshell-mode . 1) (nil . 1)) "/home/nieel/" (((:file "/home/nieel/dev/nlpo/cppm.toml") . 1) ((:symbol "-DCMAKE_INSTALL_PREFIX") . 1) (toml-mode . 1) (nil . 1)) "repeat" (((:file "/home/nieel/dev/rstudy/src/main.rs") . 1) ((:symbol "v") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "FetchContent" (((:file "/home/nieel/dev/cppm/cmake/cppm_tool.cmake") . 1) ((:keyword "function") . 1) (cmake-mode . 1) (nil . 1)) "counsel-switch-buffer" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "require" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "rm -r ../.cppm/repo/" ((eshell-mode . 1) (nil . 1)) "shiplift" (((:keyword "use") . 1) ((:file "/home/nieel/dev/alchemist/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "newline" (((:file "/home/nieel/.emacs.d/config.org") . 1) (org-mode . 1) (nil . 1) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) "Hunter" (((:file "/home/nieel/dev/cppm/src/config/dependency.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 2) (nil . 2) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) ((:symbol "cppm") . 1)) "sudo cppm build -c install" ((eshell-mode . 1) (nil . 1)) "sizeof" (((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) (c++-mode . 1) (nil . 1)) "p_regex_str" (((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) (c++-mode . 1) (nil . 1)) "subcommand" (((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:symbol "nil") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "add_money" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "p") . 1) ((:keyword "static") . 1) (c++-mode . 1) (nil . 1)) "shared_money_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 4) ((:keyword "static") . 4) (c++-mode . 4) (nil . 4) ((:symbol "p") . 1) ((:symbol "Person") . 2)) "re_expr" (((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) ((:symbol "nil") . 1) (c++-mode . 1) (nil . 1)) "with_name" (((:symbol "SubCommand") . 1) ((:keyword "fn") . 1) ((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:symbol "Arg") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "debug_list" (((:keyword "if") . 1)) "BaseOption" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:keyword "mod") . 1)) "Build" (((:file "/home/nieel/dev/cppm/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "p_array" (((:keyword "for") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "attribute" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "./mmap_hugepage" ((eshell-mode . 1) (nil . 1)) "as_ref" (((:symbol "cmake_option") . 1) ((:keyword "mut") . 1) ((:symbol "cmake") . 1) ((:symbol "option") . 1) ((:file "/home/nieel/dev/cppm/src/option_extend.rs") . 1) ((:symbol "self") . 1) ((:keyword "self") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1) ((:symbol "v") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "company-yasnippet" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "RefCell" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) (rust-mode . 1) (nil . 1)) "case" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "switch") . 1) (c++-mode . 1) (nil . 1)) "cargo +nightly install racer" ((eshell-mode . 1) (nil . 1)) "private" ((nil . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "private") . 1) (c++-mode . 1)) "get_area" ((c++-mode . 1) (nil . 1) ((:keyword "return") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:symbol "Circle") . 1) ((:keyword "for") . 1) ((:keyword "protected") . 1) ((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1)) "call_back" (((:file "/home/nieel/dev/cppm/src/option/cppm.cpp") . 1) ((:symbol "nil") . 1) (c++-mode . 1) (nil . 1)) "cppm run -b" ((eshell-mode . 1) (nil . 1)) "company-complete-selection" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "abbrev-all-caps" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "git commit -m \"nlpo change\"" ((eshell-mode . 1) (nil . 1)) "rm_matchtab" (((:keyword "sizeof") . 1) ((:file "/home/nieel/dev/school/system/src/posix_regex.cpp") . 1) (c++-mode . 1) (nil . 1)) "about" (((:file "/home/nieel/dev/cppm/src/main.rs") . 1) ((:symbol "nil") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "ls ~/.cppm/install/oboe/lastest/" ((eshell-mode . 3) (nil . 3)) "cat abc.toml" ((eshell-mode . 4) (nil . 4)) "release" ((nil . 1)) "cat ~/dev/cppkg/oboe/lastest/oboe.cmake.in" ((eshell-mode . 1) (nil . 1)) "cd ../AndroidStudioProjects/" ((eshell-mode . 1) (nil . 1)) "./cppm cppkg init -d \"a\" -m \"a\" -g \"a\" abc" ((eshell-mode . 1) (nil . 1)) "set_color" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "c") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "cppm build" ((eshell-mode . 1) (nil . 1)) "CMAKE_CXX_FLAGS_DEBUG" (((:keyword "if") . 1) ((:file "/home/nieel/dev/nlpo/CMakeLists.txt") . 1) ((:keyword "elseif") . 1)) "show_color_point" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "c") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "unsigned" (((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "add_const" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "virtual") . 1) (c++-mode . 1) (nil . 1)) "switch" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "standard" ((nil . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cppm.toml") . 1) (toml-mode . 1)) "ColorPoint" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "private") . 1) (c++-mode . 1) (nil . 1)) "stdint.h>" (((:file "/home/nieel/dev/school/system/src/memory_lock.cpp") . 1) ((:symbol "include") . 1) (c++-mode . 1) (nil . 1)) "sz_mem" (((:keyword "sizeof") . 1)) "set_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 3) ((:keyword "return") . 1) (c++-mode . 3) (nil . 3) ((:symbol "cone") . 1) ((:keyword "private") . 1) ((:keyword "public") . 1)) "int" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "stdlib.h>" (((:symbol "include") . 1) (c++-mode . 1) (nil . 1)) "address" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "p_str" (((:file "/home/nieel/dev/school/system/src/memory_lock.cpp") . 1) ((:keyword "sizeof") . 1) (c++-mode . 1) (nil . 1)) "set_new_handler" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "protected") . 2) (c++-mode . 2) (nil . 2)) "./fifo_write" ((eshell-mode . 2) (nil . 2)) "rtags-start-process-unless-running" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./cpp" ((eshell-mode . 1) (nil . 1)) "a_input" (((:keyword "else") . 1)) "evil-leader/set-key" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 2) ((:keyword "setq") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "use-package") . 1)) "writeroom-width" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "init" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "restrict" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "destory" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "recursive" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "default" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "duplex" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "./omp_nested_loop2" ((eshell-mode . 1) (nil . 1)) "ff97dfc" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "step" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "detection" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "cat pspawn.log" ((eshell-mode . 1) (nil . 1)) "unique" (((:file "/home/nieel/school/network_final.org") . 1) ((:symbol "|3") . 1) (org-mode . 1) (nil . 1)) "cat forkexec.log" ((eshell-mode . 1) (nil . 1)) "disabled" (((:file "/home/nieel/.emacs.d/config.org") . 2) (org-mode . 2) (nil . 2) ((:symbol "nil") . 2)) "09c0f9e" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "potato" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "routing" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "protocol" (((:file "/home/nieel/school/network_final.org") . 4) (org-mode . 4) (nil . 4)) "shortest" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "header" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "type" (((:file "/home/nieel/school/network_final.org") . 2) (org-mode . 2) (nil . 2)) "correction" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "parity" (((:file "/home/nieel/school/network_final.org") . 2) (org-mode . 2) (nil . 2)) "access" (((:file "/home/nieel/school/network_final.org") . 2) (org-mode . 2) (nil . 2)) "checking" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "aloha" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "partitioning" (((:file "/home/nieel/school/network_final.org") . 2) (org-mode . 2) (nil . 2)) "1234" ((org-mode . 1) (nil . 1) ((:file "/home/nieel/school/network_final.org") . 2) ((:file "/home/nieel/school/system/src/system_note.org") . 1)) "clone" (((:file "/home/nieel/dev/cppm/src/option/build.rs") . 1) ((:symbol "nil") . 2) ((:keyword "let") . 3) (rust-mode . 3) (nil . 4) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "sort") . 1) ((:keyword "for") . 1) (c++-mode . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 2) ((:symbol "it") . 1)) "macro" (((:file "/home/nieel/school/network_final.org") . 2) (org-mode . 2) (nil . 2)) "structure" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "cargo run build" ((eshell-mode . 1) (nil . 1)) "schedule" (((:file "/home/nieel/school/system_final.org") . 3) (org-mode . 3) (nil . 3)) "get_area_a" (((:file "/home/nieel/school/cpp/src/main.cpp") . 3) ((:symbol "c1") . 1) ((:keyword "typename") . 2) (c++-mode . 3) (nil . 3) ((:symbol "c2") . 1) ((:symbol "nil") . 1) ((:keyword "for") . 1)) "accumulate" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:symbol "std") . 1) ((:keyword "return") . 2) (c++-mode . 2) (nil . 2)) "getline" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "cin") . 1) ((:keyword "for") . 1) (c++-mode . 1) (nil . 1)) "write" ((org-mode . 4) (nil . 4) ((:file "/home/nieel/school/network_final.org") . 4) ((:symbol "6") . 2)) "back" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "sv") . 1) ((:keyword "for") . 1) (c++-mode . 1) (nil . 1)) "la올림픽부터" (((:file "/home/nieel/school/rusia_solution.org") . 1) (org-mode . 1) (nil . 1)) "evil-indent-plus-i-indent" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "description" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "pizza" (((:file "/home/nieel/dev/school/cpp/src/main.cpp") . 1) ((:symbol "nil") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "ls ../../../.cppm/" ((eshell-mode . 1) (nil . 1)) "lib_sysv_sem.h" ((c-mode . 1) (nil . 1)) "./sysv_msg s ../src/sysv_msg.txt" ((eshell-mode . 1) (nil . 1)) "Iterator" (((:file "/home/nieel/dev/rstudy/src/main.rs") . 2) ((:keyword "use") . 2) (rust-mode . 2) (nil . 2)) "\"option/" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "ptr" (((:file "/home/nieel/dev/rstudy/src/main.rs") . 1) ((:symbol "it") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "_marker" (((:file "/home/nieel/dev/rstudy/src/main.rs") . 1) ((:symbol "nil") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "expand-file-name" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "operator=" ((c++-mode . 1) (nil . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "switch") . 1)) "use-package-process-keywords" (((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "abbr" (((:file "/home/nieel/.emacs.d/config.org") . 1) (org-mode . 1) (nil . 1)) "cppm cppkg init -d \"Oboe is a C++ library that makes it easy to build high-performance audio apps on Android.\" -g \"https://github.com/google/oboe.git\" -m \"oboe\" oboe" ((eshell-mode . 1) (nil . 1)) "cppm cppkg init oboe --des \"Oboe is a C++ library that makes it easy to build high-performance audio apps on Android.\" --git \"https://github.com/google/oboe.git\" --module \"oboe\" --version \"lastest\"" ((eshell-mode . 1) (nil . 1)) "p_buf" (((:file "/home/nieel/dev/school/system/src/xrdr_fmt.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "default_command_" (((:file "/home/nieel/dev/nlpo/src/app.cpp") . 2) ((:keyword "if") . 2) (c++-mode . 2) (nil . 2)) "shared_money" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "static") . 2) (c++-mode . 2) (nil . 2)) "Person" (((:file "/home/nieel/school/cpp/src/main.cpp") . 3) ((:keyword "static") . 3) (c++-mode . 3) (nil . 3)) "\"openssl/" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 2) (c++-mode . 2) (nil . 2)) "incgd" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) ((:symbol "cppm") . 1) (c++-mode . 1) (nil . 1)) "\"openssl/aes.h" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) (c++-mode . 1) (nil . 1)) "./fork_pipe" ((eshell-mode . 3) (nil . 3)) ":no-require" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 5) ((:keyword "use-package") . 5) (emacs-lisp-mode . 5) (nil . 5)) "find_library" (((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/CMakeLists.txt") . 2) (cmake-mode . 3) (nil . 3) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1)) "cppm cppkg init -d \"a\" abc" ((eshell-mode . 1) (nil . 1)) "print" (((:file "/home/nieel/dev/cppm/src/option/cppkg_init.cpp") . 1) ((:symbol "fmt") . 1) ((:keyword "if") . 1) (c++-mode . 2) (nil . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "pro") . 1) ((:keyword "public") . 1)) "./cppm cppkg init -d \"a\" -d \"a\" abc" ((eshell-mode . 6) (nil . 6)) "fmt/format.h" (((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1) ((:symbol "nil") . 1) (c++-mode . 1) (nil . 1)) "cppm cppkg init -m \"a\" -d \"a\" b" ((eshell-mode . 1) (nil . 1)) "load-path" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "display-line-numbers-mode-set-explicitly" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "debug_string" (((:file "/home/nieel/dev/cppm/src/config/compiler.cpp") . 1) ((:keyword "if") . 1) (c++-mode . 1) (nil . 1)) "./omp_hello" ((eshell-mode . 2) (nil . 2)) "./mutex_recursive" ((eshell-mode . 1) (nil . 1)) "./mutex_errchk" ((eshell-mode . 1) (nil . 1)) "show_point" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "public") . 1) (c++-mode . 2) (nil . 2) ((:symbol "p") . 1) ((:keyword "private") . 1)) "set_point" (((:file "/home/nieel/school/cpp/src/main.cpp") . 3) ((:symbol "p") . 2) ((:keyword "private") . 3) (c++-mode . 3) (nil . 3) ((:symbol "c") . 1)) "class" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "private") . 2) (c++-mode . 3) (nil . 4) ((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) ((:file "/home/nieel/dev/scpc/src/main.cpp") . 1) ((:symbol "dcache") . 1) ((:keyword "while") . 1)) "radius_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:symbol "2") . 1) ((:keyword "public") . 2) (c++-mode . 2) (nil . 2) ((:symbol "radius_") . 1)) "override" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:keyword "public") . 2) (c++-mode . 2) (nil . 2)) "Circle" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "height_" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "company-dict-enable-yasnippet" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./omp_loop1" ((eshell-mode . 1) (nil . 1)) "./stack_heap" ((eshell-mode . 1) (nil . 1)) "./cond_var" ((eshell-mode . 1) (nil . 1)) "add-hook" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 4) ((:keyword "use-package") . 3) (emacs-lisp-mode . 4) (nil . 4) ((:keyword "setq") . 1)) "irony-mode-hook" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "irony-eldoc" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "calc" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "cal") . 1) ((:keyword "break") . 1) (c++-mode . 1) (nil . 1)) "defcustom" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Derived" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "override") . 1) (c++-mode . 1) (nil . 1)) "ispell-program-name" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "interactive" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 3) ((:file "/home/nieel/.emacs.d/config.org") . 2) (org-mode . 2)) "ispell-change-dictionary" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "make_unique" (((:file "/home/nieel/school/cpp/src/main.cpp") . 2) ((:symbol "std") . 1) ((:keyword "auto") . 1) (c++-mode . 2) (nil . 2) ((:keyword "for") . 1)) "evil-numbers/inc-at-pt" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "MMAP_SIZE" (((:file "/home/nieel/dev/school/system/src/mmap_ran.c") . 1) ((:keyword "if") . 1) (c-mode . 1) (nil . 1)) "evil-numbers/dec-at-pt" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "beacon-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 2) ((:keyword "setq-local") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "lambda") . 1)) "display-line-numbers-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "git-gutter" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "filedes" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "writeroom-adjust-width" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "writeroom-restore-window-config" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lock" (((:file "/home/nieel/school/system_final.org") . 5) (org-mode . 5) (nil . 5)) "./omp_task_linkedlist" ((eshell-mode . 6) (nil . 6)) "doom-modeline-env-enable-ruby" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "change" (((:file "/home/nieel/school/network_final.org") . 2) (org-mode . 2) (nil . 2)) "preamble" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "checksum" (((:file "/home/nieel/school/network_final.org") . 1) (org-mode . 1) (nil . 1)) "straight" (((:file "/home/nieel/.emacs.d/init.el") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "use-package-ensure-function" (((:file "/home/nieel/.emacs.d/init.el") . 2) ((:keyword "setq") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "use-package") . 1)) ":preface-secs" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./lisp/helm-mode.el" (((:file "/home/nieel/.emacs.d/config.org") . 1) (org-mode . 1) (nil . 1)) "~/.emacs.d/lisp/helm-mode.el" (((:file "/home/nieel/.emacs.d/config.org") . 1) (org-mode . 1) (nil . 1)) "scanning" (((:file "/home/nieel/school/network_final.org") . 2) (org-mode . 2) (nil . 2)) "point-before-scroll" ((inferior-emacs-lisp-mode . 1) (nil . 1)) "*is-windows*" ((inferior-emacs-lisp-mode . 2) (nil . 2)) "process는" (((:file "/home/nieel/school/system/src/system_note.org") . 1) (org-mode . 1) (nil . 1)) "custom-set-variables" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "custom-set-default" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "listp" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "dynamic" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "parallel" (((:file "/home/nieel/school/system_final.org") . 1) (org-mode . 1) (nil . 1)) "pragma" (((:file "/home/nieel/school/system_final.org") . 1) ((:symbol "nil") . 1) (org-mode . 1) (nil . 1)) "template" (((:file "/home/nieel/school/cpp/src/main.cpp") . 3) ((:keyword "typename") . 1) (c++-mode . 3) (nil . 3) ((:keyword "return") . 2)) "cp rusia_example.org rusia_solution.org" ((eshell-mode . 1) (nil . 1)) "tv방송국" ((org-mode . 1) (nil . 1)) "evil-set-initial-state" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-make-overriding-map" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-collection-xref-setup" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-collection-occur-setup" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-collection-wgrep-setup" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-exchange-cx-install" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-goggles-use-diff-faces" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-goggles-duration" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-inner-text-objects-map" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "ielm-mode-hook" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "after-init-hook" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "doom-modeline-vcs-max-length" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "vec!" (((:file "/home/nieel/dev/rstudy/src/main.rs") . 2) ((:keyword "fn") . 2) (rust-mode . 2) (nil . 2)) "into_iter" (((:file "/home/nieel/dev/rstudy/src/main.rs") . 3) ((:symbol "nil") . 2) ((:keyword "fn") . 2) (rust-mode . 3) (nil . 3) ((:symbol "vc") . 1) ((:keyword "mut") . 1)) ":ensure-system-package" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "fr" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:symbol "i") . 1) ((:keyword "return") . 1) (c++-mode . 1) (nil . 1)) "iter" (((:file "/home/nieel/dev/rstudy/src/main.rs") . 4) ((:symbol "v") . 3) ((:keyword "mut") . 1) (rust-mode . 4) (nil . 4) ((:symbol "nil") . 1) ((:keyword "let") . 3)) "operator" (((:file "/home/nieel/school/cpp/src/main.cpp") . 1) ((:keyword "this") . 1) (c++-mode . 1) (nil . 1)) "cargo-minor-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "front" (((:file "/home/nieel/dev/scpc/src/main.cpp") . 1) ((:symbol "dcache") . 1) ((:keyword "while") . 1) (c++-mode . 1) (nil . 1)) ":diminish" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "for_each" (((:file "/home/nieel/dev/scpc/src/main.cpp") . 1) ((:keyword "else") . 1) (c++-mode . 1) (nil . 1)) "emplace" (((:file "/home/nieel/dev/scpc/src/main.cpp") . 1) ((:symbol "dcache") . 1) ((:keyword "else") . 1) (c++-mode . 1) (nil . 1)) "dcache" (((:file "/home/nieel/dev/scpc/src/main.cpp") . 1) ((:keyword "while") . 1) (c++-mode . 1) (nil . 1)) "top" (((:file "/home/nieel/dev/scpc/src/main.cpp") . 1) ((:symbol "dcache") . 1) ((:keyword "while") . 1) (c++-mode . 1) (nil . 1)) "time cppm run" ((eshell-mode . 3) (nil . 3)) "swap" (((:file "/home/nieel/dev/scpc/src/backup.cpp") . 1) ((:symbol "dcache") . 1) ((:keyword "while") . 1) (c++-mode . 1) (nil . 1)) "./pspawn1" ((eshell-mode . 1) (nil . 1)) "8687lee@gmail" (((:file "/home/nieel/.emacs.d/lisp/cpp-mode.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./fork_process" ((eshell-mode . 1) (nil . 1)) "config_load" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) ((:symbol "cppm") . 1) (c++-mode . 1) (nil . 1)) "_pthread_cleanup_buffer" (((:file "/home/nieel/dev/cppm/src/main.cpp") . 1) ((:symbol "cppm") . 1) (c++-mode . 1) (nil . 1)) "global-company-mode" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":load-path" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "centaur-tabs-background-color" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "face-background" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "centaur-tabs-set-icons" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "shell-pop-universal-key" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-rust--as-percent" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "./sysv_sem 5" ((eshell-mode . 1) (nil . 1)) ":evil-leader" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "defalias" (((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "use-package-evil-leader-setup" (((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "use-package-concat" (((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "use-package-evil-leader--normalize" (((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "ivy-minibuffer-map" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "add_command" (((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1) ((:symbol "app_") . 1) ((:keyword "namespace") . 1) (c++-mode . 1) (nil . 1)) "toggle-input-method" (((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)))) company-statistics--log [("ECHRNG" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:symbol "app_") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("cppmopt" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 3) ((:symbol "app_") . 2) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 3)) ("package/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("package/package.h" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("cppmopt" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:symbol "app_") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("cppmopt" (nil . 1) (c++-mode . 1) ((:keyword "namespace") . 1) ((:file "/home/nieel/dev/cppm/src/option/add.cpp") . 1)) ("abbr" (nil . 1) (org-mode . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("disabled" (nil . 1) (org-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("cppm cppkg init oboe --des \"Oboe is a C++ library that makes it easy to build high-performance audio apps on Android.\" --git \"https://github.com/google/oboe.git\" --module \"oboe\" --version \"lastest\"" (nil . 1) (eshell-mode . 1)) ("cppm cppkg init -d \"Oboe is a C++ library that makes it easy to build high-performance audio apps on Android.\" -g \"https://github.com/google/oboe.git\" -m \"oboe\" oboe" (nil . 1) (eshell-mode . 1)) ("default_command_" (nil . 2) (c++-mode . 2) ((:keyword "if") . 2) ((:file "/home/nieel/dev/nlpo/src/app.cpp") . 2)) ("default_command_" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1)) ("pop_front" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "args_") . 1) ((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1)) ("money_" (nil . 4) (c++-mode . 4) ((:keyword "public") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 4)) ("money_" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("shared_money_" (nil . 4) (c++-mode . 4) ((:keyword "static") . 4) ((:file "/home/nieel/school/cpp/src/main.cpp") . 4)) ("shared_money" (nil . 2) (c++-mode . 2) ((:keyword "static") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("shared_money" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 2) ((:symbol "p") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("add_money" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("shared_money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("shared_money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "Person") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("shared_money_" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:symbol "Person") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("Person" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("disabled" (nil . 1) (org-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("Person" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("Person" (nil . 1) (c++-mode . 1) ((:keyword "static") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("\"openssl/" (nil . 2) (c++-mode . 2) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 2)) ("\"option/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("\"option/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("incgd" (nil . 1) (c++-mode . 1) ((:symbol "cppm") . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("\"openssl/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("\"openssl/aes.h" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("\"option/" (nil . 1) (c++-mode . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("sys/types.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/fork_pipe.c") . 1)) ("fcntl.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system/src/fork_pipe.c") . 1)) ("./fork_pipe" (nil . 3) (eshell-mode . 3)) ("./fork_pipe" (nil . 1) (eshell-mode . 1)) ("./fork_pipe" (nil . 1) (eshell-mode . 1)) (":no-require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("find_library" (nil . 3) (cmake-mode . 3) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/CMakeLists.txt") . 2)) ("standard" (nil . 1) (toml-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cppm.toml") . 1)) ("find_library" (nil . 1) (cmake-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/CMakeLists.txt") . 1)) ("find_library" (nil . 1) (cmake-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1)) ("cppm cppkg init -m a -v 1.0.0 abc" (nil . 2) (eshell-mode . 2)) ("print" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:symbol "fmt") . 1) ((:file "/home/nieel/dev/cppm/src/option/cppkg_init.cpp") . 1)) ("cppm cppkg init -m a -v 1.0.0 abc" (nil . 1) (eshell-mode . 1)) ("cppm cppkg init -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("fmt/format.h" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/dev/nlpo/src/app.cpp") . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 6) (eshell-mode . 6)) ("cppm cppkg init -m \"a\" -d \"a\" b" (nil . 1) (eshell-mode . 1)) ("rm abc.toml" (nil . 2) (eshell-mode . 2)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("cppm build" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("cat abc.toml" (nil . 4) (eshell-mode . 4)) ("cat abc.toml" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("cat abc.toml" (nil . 1) (eshell-mode . 1)) ("rm abc.toml" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -d \"a\" abc" (nil . 1) (eshell-mode . 1)) ("./cppm cppkg init -d \"a\" -m \"a\" -g \"a\" abc" (nil . 1) (eshell-mode . 1)) ("cat abc.toml" (nil . 1) (eshell-mode . 1)) ("dependencies" (nil . 1) (toml-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cppm.toml") . 1)) ("target_include_directories" (nil . 1) (cmake-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1)) ("cd ../AndroidStudioProjects/" (nil . 1) (eshell-mode . 1)) ("cat ~/dev/cppkg/oboe/lastest/oboe.cmake.in" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("ls ~/.cppm/install/oboe/lastest/" (nil . 3) (eshell-mode . 3)) ("ls ~/.cppm/install/oboe/lastest/" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("add_subdirectory" (nil . 1) (cmake-mode . 1) ((:file "/home/nieel/AndroidStudioProjects/Loopang/app/src/cpp/cmake/android-ndk-include.cmake") . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("cppm build --ntc" (nil . 1) (eshell-mode . 1)) ("ls ~/.cppm/install/oboe/lastest/" (nil . 1) (eshell-mode . 1)) ("touch Application.mk" (nil . 1) (eshell-mode . 1)) ("load-path" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("display-line-numbers-mode-set-explicitly" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("./omp_hello" (nil . 1) (eshell-mode . 1)) ("./mutex_recursive" (nil . 1) (eshell-mode . 1)) ("./mutex_errchk" (nil . 1) (eshell-mode . 1)) ("show_point" (nil . 2) (c++-mode . 2) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("show_point" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_color" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "c") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_point" (nil . 2) (c++-mode . 2) ((:keyword "private") . 2) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("set_point" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "c") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("show_color_point" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "c") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("class" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("radius_" (nil . 2) (c++-mode . 2) ((:keyword "public") . 2) ((:symbol "2") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("radius_" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:symbol "radius_") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("override" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("Circle" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("get_area" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:symbol "Circle") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("height_" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 8) (c++-mode . 8) ((:keyword "public") . 8) ((:file "/home/nieel/school/cpp/src/main.cpp") . 8)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("add_const" (nil . 1) (c++-mode . 1) ((:keyword "virtual") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("company-dict-enable-yasnippet" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 26) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("company-yasnippet" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("company-complete-selection" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("private" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("_IO_jump_t" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("case" (nil . 1) (c++-mode . 1) ((:keyword "switch") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("switch" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("begin" (nil . 1) (c++-mode . 1) ((:keyword "switch") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_point" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "p") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "public") . 3) ((:file "/home/nieel/school/cpp/src/main.cpp") . 5)) ("ColorPoint" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "p2") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_" (nil . 3) (c++-mode . 3) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 3)) ("int" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "virtual") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:symbol "cone") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("class" (nil . 1) (c++-mode . 1) ((:keyword "private") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("radius" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("set_new_handler" (nil . 2) (c++-mode . 2) ((:keyword "protected") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("set_new_handler" (nil . 1) (c++-mode . 1) ((:keyword "protected") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("get_area" (nil . 1) (c++-mode . 1) ((:keyword "protected") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("get_area_b" (nil . 1) (c++-mode . 1) ((:keyword "protected") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("./omp_loop1" (nil . 1) (eshell-mode . 1)) ("./omp_hello" (nil . 1) (eshell-mode . 1)) ("./fifo_write" (nil . 2) (eshell-mode . 2)) ("./cond_var" (nil . 1) (eshell-mode . 1)) ("./fifo_write" (nil . 1) (eshell-mode . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("irony-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("irony-eldoc" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("rtags-start-process-unless-running" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "class") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "class") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("operator=" (nil . 1) (c++-mode . 1) ((:keyword "switch") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("calc" (nil . 1) (c++-mode . 1) ((:keyword "break") . 1) ((:symbol "cal") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("./cpp" (nil . 1) (eshell-mode . 1)) ("defcustom" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("rtags-verify-protocol-version" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defcustom") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("override" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("Derived" (nil . 1) (c++-mode . 1) ((:keyword "override") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("ispell-program-name" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("ispell-dictionary" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("ispell-change-dictionary" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("make_unique" (nil . 1) (c++-mode . 1) ((:keyword "auto") . 1) ((:symbol "std") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("evil-numbers/inc-at-pt" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-numbers/dec-at-pt" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("beacon-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-local") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("display-line-numbers-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("beacon-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("git-gutter" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("filedes" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("writeroom-adjust-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("writeroom-restore-window-config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("writeroom-width" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("restrict" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("init" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("mutex" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("lock" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("recursive" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("default" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("destory" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("class" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("./omp_task_linkedlist" (nil . 3) (eshell-mode . 3)) ("./omp_task_linkedlist" (nil . 1) (eshell-mode . 1)) ("./omp_task_linkedlist" (nil . 1) (eshell-mode . 1)) ("./omp_nested_loop2" (nil . 1) (eshell-mode . 1)) ("change" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/network_final.org") . 2)) ("change" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("algorithm" (nil . 1) (org-mode . 4) ((:file "/home/nieel/school/network_final.org") . 4)) ("step" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("write" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 4)) ("write" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("unique" (nil . 1) (org-mode . 1) ((:symbol "|3") . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("1234" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 2)) ("write" (nil . 1) (org-mode . 1) ((:symbol "6") . 2) ((:file "/home/nieel/school/network_final.org") . 1)) ("write" (nil . 1) (org-mode . 1) ((:symbol "6") . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("vector" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("algorithm" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("xunspecifiedx" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("09c0f9e" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("minimum" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("algorithm" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("protocol" (nil . 4) (org-mode . 4) ((:file "/home/nieel/school/network_final.org") . 4)) ("shortest" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("potato" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("routing" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("header" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("type" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/network_final.org") . 2)) ("duplex" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("detection" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("correction" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("parity" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/network_final.org") . 2)) ("parity" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("checking" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("1234" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("partitioning" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/network_final.org") . 2)) ("algorithm" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("aloha" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("partitioning" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("protocol" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("access" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("protocol" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("broadcast를" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("protocol" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("address" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("macro" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/network_final.org") . 2)) ("mac을" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("macro" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("ff97dfc" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("structure" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("type" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("preamble" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("checksum" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("straight" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/init.el") . 1)) ("use-package-ensure-function" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/init.el") . 1)) ("use-package-ensure-function" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/init.el") . 1)) (":preface-secs" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("./lisp/helm-mode.el" (nil . 1) (org-mode . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("~/.emacs.d/lisp/helm-mode.el" (nil . 1) (org-mode . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("mac을" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("algorithm" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("table" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("scanning" (nil . 2) (org-mode . 2) ((:file "/home/nieel/school/network_final.org") . 2)) ("scanning" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("access" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/network_final.org") . 1)) ("point-before-scroll" (nil . 1) (inferior-emacs-lisp-mode . 1)) ("*is-windows*" (nil . 2) (inferior-emacs-lisp-mode . 2)) ("*is-windows*" (nil . 1) (inferior-emacs-lisp-mode . 1)) ("interactive" (nil . 1) (org-mode . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("custom-set-variables" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("custom-set-default" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("listp" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("schedule" (nil . 3) (org-mode . 3) ((:file "/home/nieel/school/system_final.org") . 3)) ("dynamic" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("schedule" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("schedule" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("progma" (nil . 1) (org-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("parallel" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("firstprivate" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("pragma" (nil . 1) (org-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("lock" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("lock" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("lock" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("lock" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("attribute" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/system_final.org") . 1)) ("get_area_a" (nil . 3) (c++-mode . 3) ((:keyword "typename") . 2) ((:symbol "c1") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 3)) ("get_area_a" (nil . 1) (c++-mode . 1) ((:keyword "typename") . 1) ((:symbol "c2") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("template" (nil . 3) (c++-mode . 3) ((:keyword "typename") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 3)) ("accumulate" (nil . 2) (c++-mode . 2) ((:keyword "return") . 2) ((:symbol "std") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 2)) ("accumulate" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("template" (nil . 1) (c++-mode . 1) ((:keyword "return") . 2) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("template" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("get_area_a" (nil . 1) (c++-mode . 1) ((:keyword "for") . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("make_unique" (nil . 1) (c++-mode . 1) ((:keyword "for") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("emplace_back" (nil . 1) (c++-mode . 1) ((:keyword "for") . 1) ((:symbol "sv") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("getline" (nil . 1) (c++-mode . 1) ((:keyword "for") . 1) ((:symbol "cin") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("begin" (nil . 1) (c++-mode . 1) ((:keyword "for") . 1) ((:symbol "sv") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("clone" (nil . 1) (c++-mode . 1) ((:keyword "for") . 1) ((:symbol "sort") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("back" (nil . 1) (c++-mode . 1) ((:keyword "for") . 1) ((:symbol "sv") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("cp rusia_example.org rusia_solution.org" (nil . 1) (eshell-mode . 1)) ("la올림픽부터" (nil . 1) (org-mode . 1) ((:file "/home/nieel/school/rusia_solution.org") . 1)) ("tv방송국" (nil . 1) (org-mode . 1)) ("./omp_task_linkedlist" (nil . 1) (eshell-mode . 1)) ("./omp_task_linkedlist" (nil . 1) (eshell-mode . 1)) ("./omp_task_linkedlist" (nil . 1) (eshell-mode . 1)) ("evil-set-initial-state" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-make-overriding-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-collection-xref-setup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-collection-occur-setup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-collection-wgrep-setup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-exchange-cx-install" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-goggles-use-diff-faces" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-goggles-duration" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("config" (nil . 1) (org-mode . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("evil-iedit-state/iedit-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 2)) ("evil-iedit-state/iedit-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-inner-text-objects-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-indent-plus-i-indent" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-indent-plus-default-bindings" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("turn-on-elisp-slime-nav-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("ielm-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("after-init-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("doom-modeline-vcs-max-length" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("protected" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("print" (nil . 1) (c++-mode . 1) ((:keyword "public") . 1) ((:symbol "pro") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("Vec" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("vec!" (nil . 2) (rust-mode . 2) ((:keyword "fn") . 2) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 2)) ("vec!" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("into_iter" (nil . 2) (rust-mode . 2) ((:keyword "fn") . 2) ((:symbol "nil") . 2) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 2)) ("into_iter" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("as_ref" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "v") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) (":ensure-system-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("fr" (nil . 1) (c++-mode . 1) ((:keyword "return") . 1) ((:symbol "i") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("iter" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "v") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("operator" (nil . 1) (c++-mode . 1) ((:keyword "this") . 1) ((:file "/home/nieel/school/cpp/src/main.cpp") . 1)) ("cargo-minor-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) (":diminish" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) (":no-require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) (":no-require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) (":no-require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("emplace" (nil . 1) (c++-mode . 1) ((:keyword "else") . 1) ((:symbol "dcache") . 1) ((:file "/home/nieel/dev/scpc/src/main.cpp") . 1)) ("for_each" (nil . 1) (c++-mode . 1) ((:keyword "else") . 1) ((:file "/home/nieel/dev/scpc/src/main.cpp") . 1)) ("dcache" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:file "/home/nieel/dev/scpc/src/main.cpp") . 1)) ("class" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:symbol "dcache") . 1) ((:file "/home/nieel/dev/scpc/src/main.cpp") . 1)) ("top" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:symbol "dcache") . 1) ((:file "/home/nieel/dev/scpc/src/main.cpp") . 1)) ("virtual" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:symbol "dcache") . 1) ((:file "/home/nieel/dev/scpc/src/main.cpp") . 1)) ("front" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:symbol "dcache") . 1) ((:file "/home/nieel/dev/scpc/src/main.cpp") . 1)) ("time cppm run" (nil . 3) (eshell-mode . 3)) ("swap" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:symbol "dcache") . 1) ((:file "/home/nieel/dev/scpc/src/backup.cpp") . 1)) ("time cppm run" (nil . 1) (eshell-mode . 1)) ("time cppm run" (nil . 1) (eshell-mode . 1)) (":no-require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("expand-file-name" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("interactive" (nil . 1) (org-mode . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("8687lee@gmail" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/nieel/.emacs.d/lisp/cpp-mode.el") . 1)) ("option" (nil . 1) (c++-mode . 1) ((:symbol "cppm") . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("config_load" (nil . 1) (c++-mode . 1) ((:symbol "cppm") . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("option" (nil . 1) (c++-mode . 1) ((:symbol "cppm") . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("_pthread_cleanup_buffer" (nil . 1) (c++-mode . 1) ((:symbol "cppm") . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("Hunter" (nil . 1) (c++-mode . 1) ((:symbol "cppm") . 1) ((:file "/home/nieel/dev/cppm/src/main.cpp") . 1)) ("global-company-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) (":load-path" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("centaur" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("centaur" (nil . 1) (org-mode . 1) ((:file "/home/nieel/.emacs.d/config.org") . 1)) ("centaur-tabs-background-color" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("face-background" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("centaur-tabs-set-icons" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("centaur-tabs-set-close-button" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("shell-pop-universal-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("lsp-rust--as-percent" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("iter" (nil . 1) (rust-mode . 1) ((:keyword "let") . 3) ((:symbol "nil") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("iter" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "v") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("Iterator" (nil . 2) (rust-mode . 2) ((:keyword "use") . 2) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 2)) ("clone" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 2)) ("Vec" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("into_iter" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "vc") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("Vec" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("repeat" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "v") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("iter" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "v") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("Iterator" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("ptr" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "it") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("clone" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "it") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) ("_marker" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "nil") . 1) ((:file "/home/nieel/dev/rstudy/src/main.rs") . 1)) (":evil-leader" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("defalias" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1)) ("use-package-evil-leader-setup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1)) ("use-package-concat" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1)) ("use-package-process-keywords" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1)) ("use-package-evil-leader--normalize" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/nieel/.emacs.d/lisp/use-package-evil-leader.el") . 1)) ("ivy-minibuffer-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1)) ("toggle-input-method" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/nieel/.emacs.d/config.org[*Org Src config.org[ emacs-lisp ]*]") . 1))] company-statistics--index 0)